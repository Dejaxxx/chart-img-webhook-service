════════════════════════════════════════════════════════════════════
        CHART-IMG SERVICE v7.0 PRODUCTION - QUICK START
════════════════════════════════════════════════════════════════════

📍 LOCATION: /Users/abdulaziznahas/trading-factory/chart-img-production

════════════════════════════════════════════════════════════════════
                          1️⃣ START SERVICE
════════════════════════════════════════════════════════════════════

cd /Users/abdulaziznahas/trading-factory/chart-img-production
./start_chart_service.sh

# Alternative: Direct Python
python3 chart_img_service_v7_hybrid.py

════════════════════════════════════════════════════════════════════
                          2️⃣ TEST SERVICE
════════════════════════════════════════════════════════════════════

# Quick API Test
curl -X POST http://localhost:5002/generate-charts \
     -H "Content-Type: application/json" \
     -d '{"ticker": "NVDA"}'

# Browser Test (Visual)
open http://localhost:5002/test/NVDA
open http://localhost:5002/test/AAPL
open http://localhost:5002/test/GLD

# Run Full Test Suite
python3 test_chart_final.py

════════════════════════════════════════════════════════════════════
                        3️⃣ CHECK OUTPUT
════════════════════════════════════════════════════════════════════

# View generated charts
open /Users/abdulaziznahas/chart-img-outputs/

# List recent charts
ls -la /Users/abdulaziznahas/chart-img-outputs/ | tail -20

════════════════════════════════════════════════════════════════════
                       4️⃣ n8n INTEGRATION
════════════════════════════════════════════════════════════════════

HTTP Request Node Configuration:
- URL: http://host.docker.internal:5002/generate-charts
- Method: POST
- Headers: Content-Type: application/json
- Body: {"ticker": "{{ $json.ticker }}"}

⚠️ NEVER use localhost in n8n - always use host.docker.internal

════════════════════════════════════════════════════════════════════
                      5️⃣ HEALTH CHECK
════════════════════════════════════════════════════════════════════

# Check if service is running
curl http://localhost:5002/health

# Check port
lsof -i :5002

# View logs
tail -f chart_service.log

════════════════════════════════════════════════════════════════════
                      6️⃣ STOP SERVICE
════════════════════════════════════════════════════════════════════

# Kill service on port 5002
lsof -ti:5002 | xargs kill -9

# Or press Ctrl+C in the terminal running the service

════════════════════════════════════════════════════════════════════
                        📊 WHAT IT DOES
════════════════════════════════════════════════════════════════════

For each ticker, generates 3 professional charts:
✅ Hourly Chart (1h) - 1 week history - v1 API
✅ Daily Chart (1D) - 3 months history - v2 API  
✅ Weekly Chart (1W) - 1 year history - v2 API

Each chart includes:
• Volume overlay
• Moving Averages (20, 50, 200)
• RSI, MACD, Bollinger Bands
• Stochastic (daily/weekly only)

════════════════════════════════════════════════════════════════════
                         🔑 KEY INFO
════════════════════════════════════════════════════════════════════

Service Port: 5002
API Key: yeBJ0HYxzJ71YS6DLVQDq5ptgwlmOvlgDZkZPzg6
Daily Limit: 1000 calls (333 full ticker requests)
Output Dir: /Users/abdulaziznahas/chart-img-outputs/

════════════════════════════════════════════════════════════════════
                   📚 FULL DOCUMENTATION
════════════════════════════════════════════════════════════════════

See: CHART_IMG_DEFINITIVE_README.md for complete details

════════════════════════════════════════════════════════════════════
